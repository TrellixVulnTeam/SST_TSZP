{
  "version": 3,
  "sources": ["../../stacks/StorageStack.ts", "../../stacks/ApiStack.ts", "../../stacks/AuthStack.ts", "../../stacks/index.ts"],
  "sourcesContent": ["import { Bucket, Table } from \"@serverless-stack/resources\";\n\n\nexport function StorageStack({ stack, app }:any) {\n\n  const bucket = new Bucket(stack, \"Uploads\");\n\n  const table = new Table(stack, \"Notes\", {\n    fields: {\n      userId: \"string\",\n      noteId: \"string\",\n    },\n    primaryIndex: { partitionKey: \"userId\", sortKey: \"noteId\" },\n  });\n\n  return {\n    table,\n    bucket,\n  };\n}", "import { Api, use } from \"@serverless-stack/resources\";\nimport { StorageStack } from \"./StorageStack\";\n\nexport function ApiStack({ stack, app }:any) {\n  const { table } = use(StorageStack);\n\n  // Create the API\n  const api = new Api(stack, \"Api\", {\n    defaults: {\n      authorizer: \"iam\",\n      function: {\n        permissions: [table],\n        environment: {\n          TABLE_NAME: table.tableName,\n        },\n      },\n    },\n    routes: {\n      \"POST /notes\": \"functions/create.main\",\n      \"GET /notes/{id}\": \"functions/get.main\",\n      \"GET /notes\": \"functions/list.main\",\n      \"PUT /notes/{id}\": \"functions/update.main\",\n      \"DELETE /notes/{id}\": \"functions/delete.main\",\n    },\n  });\n\n  // Show the API endpoint in the output\n  stack.addOutputs({\n    ApiEndpoint: api.url,\n  });\n\n  // Return the API resource\n  return {\n    api,\n  };\n}", "import * as iam from \"aws-cdk-lib/aws-iam\";\nimport { Auth, use } from \"@serverless-stack/resources\";\nimport { StorageStack } from \"./StorageStack\";\nimport { ApiStack } from \"./ApiStack\";\n\nexport function AuthStack({ stack, app }:any) {\n  const { bucket } = use(StorageStack);\n  const { api } = use(ApiStack);\n\n  // Create a Cognito User Pool and Identity Pool\n  const auth = new Auth(stack, \"Auth\", {\n    login: [\"email\"],\n  });\n\n  auth.attachPermissionsForAuthUsers(stack, [\n    // Allow access to the API\n    api,\n    // Policy granting access to a specific folder in the bucket\n    new iam.PolicyStatement({\n      actions: [\"s3:*\"],\n      effect: iam.Effect.ALLOW,\n      resources: [\n        bucket.bucketArn + \"/private/${cognito-identity.amazonaws.com:sub}/*\",\n      ],\n    }),\n  ]);\n\n  // Show the auth resources in the output\n  stack.addOutputs({\n    Region: app.region,\n    UserPoolId: auth.userPoolId,\n    IdentityPoolId: auth.cognitoIdentityPoolId,\n    UserPoolClientId: auth.userPoolClientId,\n  });\n\n  // Return the auth resource\n  return {\n    auth,\n  };\n}", "import { StorageStack } from \"./StorageStack\";\nimport { App } from \"@serverless-stack/resources\";\nimport { ApiStack } from \"./ApiStack\";\nimport { AuthStack } from \"./AuthStack\";\n\nexport default function (app: App) {\n  app.setDefaultFunctionProps({\n    runtime: \"nodejs16.x\",\n    srcPath: \"services\",\n    bundle: {\n      format: \"esm\",\n    },\n  });\n  app.stack(StorageStack).stack(ApiStack).stack(AuthStack);\n}\n"],
  "mappings": ";;;;;;AAAA,SAAS,QAAQ,aAAa;AAGvB,SAAS,aAAa,EAAE,OAAO,IAAI,GAAO;AAE/C,QAAM,SAAS,IAAI,OAAO,OAAO,SAAS;AAE1C,QAAM,QAAQ,IAAI,MAAM,OAAO,SAAS;AAAA,IACtC,QAAQ;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAAA,IACA,cAAc,EAAE,cAAc,UAAU,SAAS,SAAS;AAAA,EAC5D,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAhBgB;;;ACHhB,SAAS,KAAK,WAAW;AAGlB,SAAS,SAAS,EAAE,OAAO,IAAI,GAAO;AAC3C,QAAM,EAAE,MAAM,IAAI,IAAI,YAAY;AAGlC,QAAM,MAAM,IAAI,IAAI,OAAO,OAAO;AAAA,IAChC,UAAU;AAAA,MACR,YAAY;AAAA,MACZ,UAAU;AAAA,QACR,aAAa,CAAC,KAAK;AAAA,QACnB,aAAa;AAAA,UACX,YAAY,MAAM;AAAA,QACpB;AAAA,MACF;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,sBAAsB;AAAA,IACxB;AAAA,EACF,CAAC;AAGD,QAAM,WAAW;AAAA,IACf,aAAa,IAAI;AAAA,EACnB,CAAC;AAGD,SAAO;AAAA,IACL;AAAA,EACF;AACF;AAhCgB;;;ACHhB,YAAY,SAAS;AACrB,SAAS,MAAM,OAAAA,YAAW;AAInB,SAAS,UAAU,EAAE,OAAO,IAAI,GAAO;AAC5C,QAAM,EAAE,OAAO,IAAIC,KAAI,YAAY;AACnC,QAAM,EAAE,IAAI,IAAIA,KAAI,QAAQ;AAG5B,QAAM,OAAO,IAAI,KAAK,OAAO,QAAQ;AAAA,IACnC,OAAO,CAAC,OAAO;AAAA,EACjB,CAAC;AAED,OAAK,8BAA8B,OAAO;AAAA,IAExC;AAAA,IAEA,IAAQ,oBAAgB;AAAA,MACtB,SAAS,CAAC,MAAM;AAAA,MAChB,QAAY,WAAO;AAAA,MACnB,WAAW;AAAA,QACT,OAAO,YAAY;AAAA,MACrB;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AAGD,QAAM,WAAW;AAAA,IACf,QAAQ,IAAI;AAAA,IACZ,YAAY,KAAK;AAAA,IACjB,gBAAgB,KAAK;AAAA,IACrB,kBAAkB,KAAK;AAAA,EACzB,CAAC;AAGD,SAAO;AAAA,IACL;AAAA,EACF;AACF;AAlCgB;;;ACAD,SAAR,eAAkB,KAAU;AACjC,MAAI,wBAAwB;AAAA,IAC1B,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,QAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACD,MAAI,MAAM,YAAY,EAAE,MAAM,QAAQ,EAAE,MAAM,SAAS;AACzD;AATO;",
  "names": ["use", "use"]
}
