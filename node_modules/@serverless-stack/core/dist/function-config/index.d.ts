declare type Secret = {
    value?: string;
    fallbackValue?: string;
};
export declare const SECRET_ENV_PREFIX = "SST_SECRET_";
export declare const PARAM_ENV_PREFIX = "SST_PARAM_";
export declare const FALLBACK_STAGE = ".fallback";
export declare function listSecrets(app: string, stage: string, region: string): Promise<Record<string, Secret>>;
export declare function getSecret(app: string, stage: string, region: string, name: string): Promise<Secret>;
export declare function setSecret(app: string, stage: string, region: string, name: string, value: string): Promise<void>;
export declare function setSecretFallback(app: string, region: string, name: string, value: string): Promise<void>;
export declare function removeSecret(app: string, stage: string, region: string, name: string): Promise<void>;
export declare function removeSecretFallback(app: string, region: string, name: string): Promise<void>;
export declare function buildSsmPrefixForSecret(app: string, stage: string): string;
export declare function buildSsmPrefixForSecretFallback(app: string): string;
export declare function buildSsmPrefixForParameter(app: string, stage: string): string;
export declare function buildSsmNameForSecret(app: string, stage: string, name: string): string;
export declare function buildSsmNameForSecretFallback(app: string, name: string): string;
export declare function buildSsmNameForParameter(app: string, stage: string, name: string): string;
export * as FunctionConfig from "./index.js";
