import { Construct } from "constructs";
import { assertNameNotInUse } from "./Config.js";
/**
 * The `Secret` construct is a higher level CDK construct that makes it easy to manage app secrets.
 *
 * @example
 * ### Using the minimal config
 *
 * ```js
 * import { Config } from "@serverless-stack/resources";
 *
 * new Config.Secret(stack, "STRIPE_KEY");
 * ```
 */
export class Secret extends Construct {
    constructor(scope, id) {
        super(scope, id);
        this.name = id;
        assertNameNotInUse(id);
        Secret.all.add(id);
    }
    /** @internal */
    static getAllNames() {
        return Array.from(Secret.all);
    }
    /** @internal */
    static hasName(name) {
        return Secret.all.has(name);
    }
    /** @internal */
    static clear() {
        Secret.all.clear();
    }
    /** @internal */
    getConstructMetadata() {
        return {
            type: "Secret",
            data: {
                name: this.name,
            },
        };
    }
}
Secret.all = new Set();
